"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gpuCommand = exports.GPU_COMMAND = void 0;
const renderer_1 = require("@remotion/renderer");
const chalk_1 = require("./chalk");
const get_cli_options_1 = require("./get-cli-options");
const log_1 = require("./log");
exports.GPU_COMMAND = 'gpu';
const gpuCommand = async (remotionRoot) => {
    const { browserExecutable, logLevel, chromiumOptions } = await (0, get_cli_options_1.getCliOptions)({
        isLambda: false,
        remotionRoot,
        type: 'get-compositions',
    });
    const statuses = await renderer_1.RenderInternals.getChromiumGpuInformation({
        browserExecutable,
        indent: false,
        logLevel,
        chromiumOptions,
    });
    for (const { feature, status } of statuses) {
        log_1.Log.info(`${feature}: ${colorStatus(status)}`);
    }
};
exports.gpuCommand = gpuCommand;
const colorStatus = (status) => {
    if (status === 'Enabled') {
        return chalk_1.chalk.green(status);
    }
    if (status === 'Hardware accelerated') {
        return chalk_1.chalk.green(status);
    }
    if (status === 'Disabled') {
        return chalk_1.chalk.red(status);
    }
    if (status === 'Software only. Hardware acceleration disabled') {
        return chalk_1.chalk.red(status);
    }
    if (status === 'Software only, hardware acceleration unavailable') {
        return chalk_1.chalk.red(status);
    }
    return status;
};
