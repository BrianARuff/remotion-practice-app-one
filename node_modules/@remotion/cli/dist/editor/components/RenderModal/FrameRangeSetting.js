"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrameRangeSetting = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const layout_1 = require("./layout");
const MultiRangeSlider_1 = require("./MultiRangeSlider");
const numberWrapper = {
    minWidth: '39px',
    display: 'flex',
    justifyContent: 'flex-end',
    alignItems: 'center',
    fontSize: '14px',
};
const FrameRangeSetting = ({ startFrame, endFrame, setEndFrame, durationInFrames, setStartFrame }) => {
    const minStartFrame = 0;
    const maxEndFrame = durationInFrames - 1;
    const onStartFrameChangedDirectly = (0, react_1.useCallback)((newStartFrame) => {
        setStartFrame(newStartFrame);
    }, [setStartFrame]);
    const onEndFrameChangedDirectly = (0, react_1.useCallback)((newEndFrame) => {
        setEndFrame(newEndFrame);
    }, [setEndFrame]);
    return ((0, jsx_runtime_1.jsxs)("div", { style: layout_1.optionRow, children: [(0, jsx_runtime_1.jsx)("div", { style: layout_1.label, children: "Frame range" }), (0, jsx_runtime_1.jsxs)("div", { style: layout_1.rightRow, children: [(0, jsx_runtime_1.jsx)("div", { style: numberWrapper, children: startFrame }), (0, jsx_runtime_1.jsx)(MultiRangeSlider_1.MultiRangeSlider, { min: minStartFrame, max: maxEndFrame, start: startFrame, end: endFrame, step: 1, onLeftThumbDrag: onStartFrameChangedDirectly, onRightThumbDrag: onEndFrameChangedDirectly }), (0, jsx_runtime_1.jsx)("div", { style: numberWrapper, children: endFrame })] })] }));
};
exports.FrameRangeSetting = FrameRangeSetting;
