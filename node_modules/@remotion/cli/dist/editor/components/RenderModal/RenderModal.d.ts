import type { AudioCodec, Codec, ColorSpace, OpenGlRenderer, PixelFormat, ProResProfile, StillImageFormat, VideoImageFormat, X264Preset } from '@remotion/renderer';
import React from 'react';
type RenderModalProps = {
    compositionId: string;
    initialFrame: number;
    initialVideoImageFormat: VideoImageFormat;
    initialStillImageFormat: StillImageFormat;
    initialJpegQuality: number;
    initialScale: number;
    initialVerbose: boolean;
    initialConcurrency: number;
    minConcurrency: number;
    maxConcurrency: number;
    initialMuted: boolean;
    initialEnforceAudioTrack: boolean;
    initialProResProfile: ProResProfile;
    initialx264Preset: X264Preset;
    initialPixelFormat: PixelFormat;
    initialVideoBitrate: string | null;
    initialAudioBitrate: string | null;
    initialEveryNthFrame: number;
    initialNumberOfGifLoops: number | null;
    initialDelayRenderTimeout: number;
    initialEnvVariables: Record<string, string>;
    initialDisableWebSecurity: boolean;
    initialGl: OpenGlRenderer | null;
    initialIgnoreCertificateErrors: boolean;
    initialOffthreadVideoCacheSizeInBytes: number | null;
    initialHeadless: boolean;
    initialColorSpace: ColorSpace;
    defaultProps: Record<string, unknown>;
    inFrameMark: number | null;
    outFrameMark: number | null;
    initialMultiProcessOnLinux: boolean;
    defaultConfigurationVideoCodec: Codec | null;
    defaultConfigurationAudioCodec: AudioCodec | null;
};
export declare const RenderModalWithLoader: React.FC<RenderModalProps>;
export {};
