import React from 'react';
import type { z } from 'zod';
import type { JSONPath } from './zod-types';
import type { UpdaterFunction } from './ZodSwitch';
export type ObjectDiscrimatedUnionReplacement = {
    discriminator: string;
    markup: React.ReactNode;
};
export declare const ZodObjectEditor: React.FC<{
    schema: z.ZodTypeAny;
    jsonPath: JSONPath;
    value: Record<string, unknown>;
    defaultValue: Record<string, unknown>;
    setValue: UpdaterFunction<Record<string, unknown>>;
    onSave: UpdaterFunction<Record<string, unknown>>;
    showSaveButton: boolean;
    onRemove: null | (() => void);
    saving: boolean;
    saveDisabledByParent: boolean;
    mayPad: boolean;
    discriminatedUnionReplacement: ObjectDiscrimatedUnionReplacement | null;
}>;
