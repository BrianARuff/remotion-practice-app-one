"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderQueueCopyToClipboard = exports.supportsCopyingToClipboard = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const clipboard_1 = require("../../icons/clipboard");
const InlineAction_1 = require("../InlineAction");
const NotificationCenter_1 = require("../Notifications/NotificationCenter");
const actions_1 = require("./actions");
const revealIconStyle = {
    height: 12,
    color: 'currentColor',
};
const supportsCopyingToClipboard = (job) => {
    if (job.status !== 'done') {
        return false;
    }
    if (job.type !== 'still') {
        return false;
    }
    if (job.imageFormat === 'png') {
        return true;
    }
    if (job.imageFormat === 'jpeg') {
        return true;
    }
    return false;
};
exports.supportsCopyingToClipboard = supportsCopyingToClipboard;
const RenderQueueCopyToClipboard = ({ job }) => {
    const renderCopyAction = (0, react_1.useCallback)((color) => {
        return (0, jsx_runtime_1.jsx)(clipboard_1.ClipboardIcon, { style: revealIconStyle, color: color });
    }, []);
    const onClick = (0, react_1.useCallback)((e) => {
        e.stopPropagation();
        (0, actions_1.copyToClipboard)({ outName: job.outName })
            .catch((err) => {
            (0, NotificationCenter_1.sendErrorNotification)(`Could not copy to clipboard: ${err.message}`);
        })
            .then(() => {
            var _a;
            (_a = NotificationCenter_1.notificationCenter.current) === null || _a === void 0 ? void 0 : _a.addNotification({
                content: 'Copied to clipboard',
                created: Date.now(),
                duration: 1000,
                id: String(Math.random()),
            });
        });
    }, [job.outName]);
    return ((0, jsx_runtime_1.jsx)(InlineAction_1.InlineAction, { title: "Copy to clipboard", renderAction: renderCopyAction, onClick: onClick }));
};
exports.RenderQueueCopyToClipboard = RenderQueueCopyToClipboard;
