import type { AudioCodec, BrowserExecutable, Codec, OpenGlRenderer, PixelFormat, ProResProfile, StillImageFormat, VideoImageFormat, X264Preset } from '@remotion/renderer';
import { BrowserSafeApis } from '@remotion/renderer/client';
type CommandLineOptions = {
    ['browser-executable']: BrowserExecutable;
    ['pixel-format']: PixelFormat;
    ['image-format']: VideoImageFormat | StillImageFormat;
    ['prores-profile']: ProResProfile;
    ['x264-preset']: X264Preset;
    ['bundle-cache']: string;
    ['env-file']: string;
    ['ignore-certificate-errors']: string;
    ['disable-web-security']: string;
    ['every-nth-frame']: number;
    ['number-of-gif-loops']: number;
    ['number-of-shared-audio-tags']: number;
    [BrowserSafeApis.options.offthreadVideoCacheSizeInBytesOption
        .cliFlag]: typeof BrowserSafeApis.options.offthreadVideoCacheSizeInBytesOption.type;
    [BrowserSafeApis.options.colorSpaceOption
        .cliFlag]: typeof BrowserSafeApis.options.colorSpaceOption.type;
    version: string;
    codec: Codec;
    concurrency: number;
    timeout: number;
    config: string;
    ['public-dir']: string;
    ['audio-bitrate']: string;
    ['video-bitrate']: string;
    ['audio-codec']: AudioCodec;
    crf: number;
    force: boolean;
    output: string;
    overwrite: boolean;
    png: boolean;
    props: string;
    quality: number;
    ['jpeg-quality']: number;
    frames: string | number;
    scale: number;
    sequence: boolean;
    quiet: boolean;
    q: boolean;
    log: string;
    help: boolean;
    port: number;
    frame: string | number;
    ['disable-headless']: boolean;
    ['disable-keyboard-shortcuts']: boolean;
    muted: boolean;
    height: number;
    width: number;
    runs: number;
    concurrencies: string;
    ['enforce-audio-track']: boolean;
    gl: OpenGlRenderer;
    ['package-manager']: string;
    ['webpack-poll']: number;
    ['no-open']: boolean;
    ['browser']: string;
    ['browser-args']: string;
    ['user-agent']: string;
    [BrowserSafeApis.options.deleteAfterOption.cliFlag]: string | undefined;
    [BrowserSafeApis.options.folderExpiryOption.cliFlag]: boolean | undefined;
    [BrowserSafeApis.options.enableMultiprocessOnLinuxOption.cliFlag]: boolean;
};
export declare const BooleanFlags: string[];
export declare const parsedCli: CommandLineOptions & {
    _: string[];
};
export declare const parseCommandLine: () => void;
export declare const quietFlagProvided: () => boolean;
export {};
