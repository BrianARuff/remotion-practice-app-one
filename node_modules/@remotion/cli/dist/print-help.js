"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printHelp = void 0;
const chalk_1 = require("./chalk");
const gpu_1 = require("./gpu");
const log_1 = require("./log");
const versions_1 = require("./versions");
const packagejson = require('../package.json');
const printHelp = () => {
    log_1.Log.info(`@remotion/cli ${packagejson.version}`);
    log_1.Log.info(`Â© ${new Date().getFullYear()} The Remotion AG`);
    log_1.Log.info();
    log_1.Log.info('Available commands:');
    log_1.Log.info('');
    log_1.Log.info(chalk_1.chalk.blue('remotion studio') + chalk_1.chalk.gray(' <entry-point.ts>'));
    log_1.Log.info('Start the Remotion studio.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/studio'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion render') +
        chalk_1.chalk.gray(' <entry-point.ts> <comp-id> <output-file.mp4>'));
    log_1.Log.info('Render video, audio or an image sequence.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/render'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion still') +
        chalk_1.chalk.gray(' <entry-point.ts> <comp-id> <still.png>'));
    log_1.Log.info('Render a still frame and save it as an image.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/still'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion compositions') + chalk_1.chalk.gray(' <index-file.ts>'));
    log_1.Log.info('Prints the available compositions.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/compositions'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion benchmark') +
        chalk_1.chalk.gray(' <index-file.ts> <list-of-compositions>'));
    log_1.Log.info('Benchmarks rendering a composition. Same options as for render.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/benchmark'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion ' + versions_1.VERSIONS_COMMAND));
    log_1.Log.info('Prints and validates versions of all Remotion packages.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/versions'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion ' + gpu_1.GPU_COMMAND));
    log_1.Log.info('Prints information about how Chrome uses the CPU.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/gpu'));
    log_1.Log.info();
    log_1.Log.info(chalk_1.chalk.blue('remotion upgrade'));
    log_1.Log.info('Ensure Remotion is on the newest version.');
    log_1.Log.info(chalk_1.chalk.gray('https://www.remotion.dev/docs/cli/upgrade'));
    log_1.Log.info();
    log_1.Log.info('Visit https://www.remotion.dev/docs/cli for browsable CLI documentation.');
};
exports.printHelp = printHelp;
