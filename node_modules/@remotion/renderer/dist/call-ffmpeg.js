"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.callFf = exports.dynamicLibraryPathOptions = void 0;
const execa_1 = __importDefault(require("execa"));
const node_fs_1 = require("node:fs");
const node_path_1 = __importDefault(require("node:path"));
const get_executable_path_1 = require("./compositor/get-executable-path");
const truthy_1 = require("./truthy");
const dynamicLibraryPathOptions = () => {
    const lib = node_path_1.default.join((0, get_executable_path_1.getExecutablePath)('ffmpeg-cwd'), 'remotion', 'lib');
    return {
        env: {
            RUST_BACKTRACE: 'full',
            ...(process.platform === 'darwin'
                ? {
                    DYLD_LIBRARY_PATH: lib,
                }
                : process.platform === 'win32'
                    ? {
                        PATH: `${lib};${process.env.PATH}`,
                    }
                    : {
                        LD_LIBRARY_PATH: lib,
                    }),
        },
    };
};
exports.dynamicLibraryPathOptions = dynamicLibraryPathOptions;
const callFf = (bin, args, options) => {
    const executablePath = (0, get_executable_path_1.getExecutablePath)(bin);
    if (!process.env.READ_ONLY_FS) {
        (0, node_fs_1.chmodSync)(executablePath, 0o755);
    }
    return (0, execa_1.default)(executablePath, args.filter(truthy_1.truthy), {
        ...(0, exports.dynamicLibraryPathOptions)(),
        ...options,
    });
};
exports.callFf = callFf;
