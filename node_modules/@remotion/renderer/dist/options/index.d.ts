/// <reference types="react" />
export declare const allOptions: {
    scaleOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: number;
    };
    crfOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: number;
    };
    jpegQualityOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: number;
    };
    videoBitrate: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: string;
    };
    audioBitrateOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: string;
    };
    enforceAudioOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: boolean;
    };
    muteOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: boolean;
    };
    videoCodecOption: {
        name: string;
        cliFlag: string;
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: string;
    };
    offthreadVideoCacheSizeInBytesOption: {
        name: string;
        cliFlag: "offthreadvideo-cache-size-in-bytes";
        description: () => JSX.Element;
        ssrName: "offthreadVideoCacheSizeInBytes";
        docLink: string;
        type: number | null;
    };
    webhookCustomDataOption: {
        name: string;
        cliFlag: "webhook-custom-data";
        description: (type: "ssr" | "cli") => JSX.Element;
        ssrName: "customData";
        docLink: string;
        type: Record<string, unknown> | null;
    };
    colorSpaceOption: {
        name: string;
        cliFlag: "color-space";
        description: () => JSX.Element;
        docLink: string;
        ssrName: string;
        type: "default" | "bt709";
    };
    deleteAfterOption: {
        name: string;
        cliFlag: "delete-after";
        description: () => JSX.Element;
        ssrName: "deleteAfter";
        docLink: string;
        type: string | null;
    };
    folderExpiryOption: {
        name: string;
        cliFlag: "enable-folder-expiry";
        description: () => JSX.Element;
        ssrName: "enableFolderExpiry";
        docLink: string;
        type: boolean | null;
    };
    enableMultiprocessOnLinuxOption: {
        name: string;
        cliFlag: "enable-multiprocess-on-linux";
        description: () => JSX.Element;
        ssrName: string;
        docLink: string;
        type: boolean;
    };
    glOption: {
        cliFlag: string;
        docLink: string;
        name: string;
        type: "swangle" | "angle" | "egl" | "swiftshader" | "vulkan" | "angle-egl";
        ssrName: string;
        description: () => JSX.Element;
    };
};
