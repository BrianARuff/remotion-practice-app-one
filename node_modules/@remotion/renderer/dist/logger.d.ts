import type { LogLevel } from './log-level';
export declare const INDENT_TOKEN: string;
type LogOptions = {
    indent: boolean;
    logLevel: LogLevel;
};
type VerboseLogOptions = LogOptions & {
    tag?: string;
};
export declare const verboseTag: (str: string) => string;
export declare const secondverboseTag: (str: string) => string;
export declare const Log: {
    verbose: (message?: any, ...optionalParams: any[]) => void;
    verboseAdvanced: (options: VerboseLogOptions, message?: any, ...optionalParams: any[]) => void;
    info: (message?: any, ...optionalParams: any[]) => void;
    infoAdvanced: (options: LogOptions, message?: any, ...optionalParams: any[]) => void;
    warn: (message?: any, ...optionalParams: any[]) => void;
    warnAdvanced: (options: LogOptions, message?: any, ...optionalParams: any[]) => void;
    error: (message?: any, ...optionalParams: any[]) => void;
    errorAdvanced: (options: VerboseLogOptions, message?: any, ...optionalParams: any[]) => void;
};
export declare const getLogLevel: () => "verbose" | "info" | "warn" | "error";
export declare const setLogLevel: (newLogLevel: LogLevel) => void;
export {};
